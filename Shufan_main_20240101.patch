diff --git a/src/codehelp/class_config.py b/src/codehelp/class_config.py
index 49333bd..c3b1efc 100644
--- a/src/codehelp/class_config.py
+++ b/src/codehelp/class_config.py
@@ -4,9 +4,11 @@
 
 from dataclasses import dataclass, field
 
-from flask import current_app
+from flask import current_app, render_template
+from gened.auth import get_auth
 from gened.class_config import get_class_config as gened_get_config
 from gened.class_config import register_class_config, register_extra_handler
+from gened.db import get_db
 from typing_extensions import Self
 from werkzeug.datastructures import ImmutableMultiDict
 
@@ -34,5 +36,13 @@ def get_class_config() -> ClassConfig:
     return gened_get_config(ClassConfig)
 
 
+def assignment_config_form() -> str:
+    db = get_db()
+    auth = get_auth()
+    assignments = db.execute("SELECT * from assignments WHERE assignments.class_id=? AND is_deleted = FALSE ORDER BY id", [auth['class_id']]).fetchall()
+    return render_template("config_form_assignments.html", assignments=assignments)
+
+
 def register_with_gened() -> None:
     register_class_config(ClassConfig)
+    register_extra_handler(assignment_config_form)
diff --git a/src/codehelp/helper.py b/src/codehelp/helper.py
index c1bcf74..016e346 100644
--- a/src/codehelp/helper.py
+++ b/src/codehelp/helper.py
@@ -31,6 +31,8 @@ def help_form(query_id: int | None = None) -> str:
     languages = class_config.languages
     selected_lang = class_config.default_lang
 
+    assignments = db.execute("SELECT * from assignments WHERE assignments.class_id=? AND assignments.is_deleted = FALSE ORDER BY id", [auth['class_id']]).fetchall()
+
     # Select most recently submitted language, if available
     lang_row = db.execute("SELECT language FROM queries WHERE queries.user_id=? ORDER BY query_time DESC LIMIT 1", [auth['user_id']]).fetchone()
     if lang_row and lang_row['language'] in languages:
@@ -45,20 +47,30 @@ def help_form(query_id: int | None = None) -> str:
 
     history = get_history()
 
-    return render_template("help_form.html", query=query_row, history=history, languages=languages, selected_lang=selected_lang)
+    return render_template("help_form.html", query=query_row, history=history, languages=languages, selected_lang=selected_lang, assignments=assignments)
 
 
 @bp.route("/view/<int:query_id>")
 @login_required
 def help_view(query_id: int) -> str:
+    db = get_db()
     query_row, responses = get_query(query_id)
     history = get_history()
+    # if query row is not valid or if query is not one that the user is allowed to acccess
+    # query row might be none
+    #
+    # assignment name and content can be set to empty strings
+    if query_row and query_row['assignment_id']:
+        assignment_name, assignment_content = db.execute("SELECT name, content FROM assignments WHERE assignments.id=?", [query_row['assignment_id']]).fetchone()
+    else:
+        assignment_name, assignment_content = " ", " "
+
     if query_row and query_row['topics_json']:
         topics = json.loads(query_row['topics_json'])
     else:
         topics = []
 
-    return render_template("help_view.html", query=query_row, responses=responses, history=history, topics=topics)
+    return render_template("help_view.html", query=query_row, assignment_name=assignment_name, assignment_content=assignment_content, responses=responses, history=history, topics=topics)
 
 
 def score_response(response_txt: str, avoid_set: Iterable[str]) -> int:
@@ -77,7 +89,7 @@ def score_response(response_txt: str, avoid_set: Iterable[str]) -> int:
     return score
 
 
-async def run_query_prompts(llm_dict: LLMDict, language: str, code: str, error: str, issue: str) -> tuple[list[dict[str, str]], dict[str, str]]:
+async def run_query_prompts(llm_dict: LLMDict, language: str, assignment_id: int, code: str, error: str, issue: str) -> tuple[list[dict[str, str]], dict[str, str]]:
     ''' Run the given query against the coding help system of prompts.
 
     Returns a tuple containing:
@@ -87,6 +99,13 @@ async def run_query_prompts(llm_dict: LLMDict, language: str, code: str, error:
     api_key = llm_dict['key']
     model = llm_dict['model']
 
+    db = get_db()
+    assignment_content = db.execute("SELECT content from assignments WHERE assignments.id=?", [assignment_id]).fetchone()
+    if assignment_content is not None and len(assignment_content) > 0:
+        content_value = assignment_content[0]
+    else:
+        content_value = None
+
     # create "avoid set" from class configuration
     class_config = get_class_config()
     avoid_set = {x.strip() for x in class_config.avoid.split('\n') if x.strip() != ''}
@@ -95,7 +114,7 @@ async def run_query_prompts(llm_dict: LLMDict, language: str, code: str, error:
     task_main = asyncio.create_task(
         get_completion(
             api_key,
-            prompt=prompts.make_main_prompt(language, code, error, issue, avoid_set),
+            prompt=prompts.make_main_prompt(language, content_value, code, error, issue, avoid_set),
             model=model,
             n=1,
             score_func=lambda x: score_response(x, avoid_set)
@@ -104,7 +123,7 @@ async def run_query_prompts(llm_dict: LLMDict, language: str, code: str, error:
     task_sufficient = asyncio.create_task(
         get_completion(
             api_key,
-            prompt=prompts.make_sufficient_prompt(language, code, error, issue),
+            prompt=prompts.make_sufficient_prompt(language, content_value, code, error, issue),
             model=model
         )
     )
@@ -136,24 +155,24 @@ async def run_query_prompts(llm_dict: LLMDict, language: str, code: str, error:
         return responses, {'insufficient': response_sufficient_txt, 'main': response_txt}
 
 
-def run_query(llm_dict: LLMDict, language: str, code: str, error: str, issue: str) -> int:
-    query_id = record_query(language, code, error, issue)
+def run_query(llm_dict: LLMDict, language: str, assignment_id: int, code: str, error: str, issue: str) -> int:
+    query_id = record_query(language, assignment_id, code, error, issue)
 
-    responses, texts = asyncio.run(run_query_prompts(llm_dict, language, code, error, issue))
+    responses, texts = asyncio.run(run_query_prompts(llm_dict, language, assignment_id, code, error, issue))
 
     record_response(query_id, responses, texts)
 
     return query_id
 
 
-def record_query(language: str, code: str, error: str, issue: str) -> int:
+def record_query(language: str, assignment_id: int, code: str, error: str, issue: str) -> int:
     db = get_db()
     auth = get_auth()
     role_id = auth['role_id']
 
     cur = db.execute(
-        "INSERT INTO queries (language, code, error, issue, user_id, role_id) VALUES (?, ?, ?, ?, ?, ?)",
-        [language, code, error, issue, auth['user_id'], role_id]
+        "INSERT INTO queries (language, assignment_id, code, error, issue, user_id, role_id) VALUES (?, ?, ?, ?, ?, ?, ?)",
+        [language, assignment_id, code, error, issue, auth['user_id'], role_id]
     )
     new_row_id = cur.lastrowid
     db.commit()
@@ -184,13 +203,18 @@ def help_request(llm_dict: LLMDict) -> Response:
         language = class_config.languages[lang_id]
     else:
         language = ""
+
+    if "assignment_id" in request.form:
+        assignment_id = request.form["assignment_id"]
+    else:
+        assignment_id = None
     code = request.form["code"]
     error = request.form["error"]
     issue = request.form["issue"]
 
     # TODO: limit length of code/error/issue
 
-    query_id = run_query(llm_dict, language, code, error, issue)
+    query_id = run_query(llm_dict, language, assignment_id, code, error, issue)
 
     return redirect(url_for(".help_view", query_id=query_id))
 
@@ -207,11 +231,12 @@ def load_test(llm_dict: LLMDict) -> Response:
     llm_dict['key'] = TEST_API_KEY
 
     language = "Python"
+    assignment_id = "Assignment"
     code = "Code"
     error = "Error"
     issue = "Issue"
 
-    query_id = run_query(llm_dict, language, code, error, issue)
+    query_id = run_query(llm_dict, language, assignment_id, code, error, issue)
 
     return redirect(url_for(".help_view", query_id=query_id))
 
@@ -252,12 +277,16 @@ def get_topics_raw(llm_dict: LLMDict, query_id: int) -> list[str]:
 
 def get_topics(llm_dict: LLMDict, query_id: int) -> list[str]:
     query_row, responses = get_query(query_id)
+    db = get_db()
+    assignment_content = db.execute("SELECT content from assignments WHERE assignments.id=?", [query_row['assignment_id']]).fetchone()
+    content_value = assignment_content[0]
 
     if not query_row or not responses:
         return []
 
     messages = prompts.make_topics_prompt(
         query_row['language'],
+        content_value,
         query_row['code'],
         query_row['error'],
         query_row['issue'],
diff --git a/src/codehelp/prompts.py b/src/codehelp/prompts.py
index b4bc247..de4236d 100644
--- a/src/codehelp/prompts.py
+++ b/src/codehelp/prompts.py
@@ -13,7 +13,7 @@ jinja_env = Environment(
 )
 
 
-def make_main_prompt(language: str, code: str, error: str, issue: str, avoid_set: Iterable[str] | None = None) -> str:
+def make_main_prompt(language: str, assignment_content: str, code: str, error: str, issue: str, avoid_set: Iterable[str] | None = None) -> str:
     # generate the extra / avoidance instructions
     if avoid_set is not None:
         extra_text = f"Do not use in your response: {', '.join(avoid_set)}."
@@ -27,11 +27,13 @@ def make_main_prompt(language: str, code: str, error: str, issue: str, avoid_set
     return f"""You are a system for assisting a student with programming.
 The students provide:
  1) the programming language (in "<lang>" delimiters)
+ 2) the assignment they are working on (in "<assignment_content>" delimiters)
  2) a relevant snippet of their code (in "<code_{nonce}>")
  3) an error message they are seeing (in "<error_{nonce}>")
  4) their issue or question and how they want assistance (in "<issue_{nonce}>")
 
 <lang>{language}</lang>
+<assignment_content>{assignment_content}</assignment_content>
 <code_{nonce}>
 {code}
 </code_{nonce}>
@@ -65,6 +67,7 @@ You are a system for assisting students with programming.
 
 I provide:
  - the programming language (in "<lang>" delimiters)
+ - the assignment instructions (in "<assignment_content>" delimiters)                                           
 {% if code %}
  - a relevant snippet of my code (in "<code>")
 {% endif %}
@@ -80,6 +83,9 @@ Here is my submission:
 <lang>
 {{language if language != 'C' else 'the C language'}}
 </lang>
+<assignment_content>
+{{assignment_content}}                                            
+</assignment_content>                                                                                       
 {% if code %}
 <code>
 {{code}}
@@ -102,8 +108,8 @@ Do not tell me how to correct anything.  Instead, please assess my submission an
 """)
 
 
-def make_sufficient_prompt(language: str, code: str, error: str, issue: str) -> str:
-    return sufficient_template.render(language=language, code=code, error=error, issue=issue)
+def make_sufficient_prompt(language: str, assignment_content: str, code: str, error: str, issue: str) -> str:
+    return sufficient_template.render(language=language, assignment_content=assignment_content, code=code, error=error, issue=issue)
 
 
 def make_cleanup_prompt(response_text: str) -> str:
@@ -115,10 +121,11 @@ Rewritten:
 """
 
 
-def make_topics_prompt(language: str, code: str, error: str, issue: str, response_text: str) -> list[dict[str, str]]:
+def make_topics_prompt(language: str, assignment_content: str, code: str, error: str, issue: str, response_text: str) -> list[dict[str, str]]:
     messages = [
         {'role': 'user', 'content': f"""\
 <language>{language}</language>
+<assignment>{assignment_content}</assignment>
 <code>{code}</code>
 <error>{error}</error>
 <issue>{issue}</issue>
diff --git a/src/codehelp/schema.sql b/src/codehelp/schema.sql
index eb4597f..dab27dc 100644
--- a/src/codehelp/schema.sql
+++ b/src/codehelp/schema.sql
@@ -19,8 +19,10 @@ CREATE TABLE queries (
     helpful_emoji TEXT GENERATED ALWAYS AS (CASE helpful WHEN 1 THEN '✅' WHEN 0 THEN '❌' ELSE '' END) VIRTUAL,
     user_id INTEGER NOT NULL,
     role_id INTEGER,
+    assignment_id INTEGER,
     FOREIGN KEY(user_id) REFERENCES users(id),
-    FOREIGN KEY(role_id) REFERENCES roles(id)
+    FOREIGN KEY(role_id) REFERENCES roles(id),
+    FOREIGN KEY(assignment_id) REFERENCES assignments(id)
 );
 
 DROP TABLE IF EXISTS tutor_chats;
diff --git a/src/codehelp/templates/config_form_assignments.html b/src/codehelp/templates/config_form_assignments.html
new file mode 100644
index 0000000..00a55bb
--- /dev/null
+++ b/src/codehelp/templates/config_form_assignments.html
@@ -0,0 +1,47 @@
+
+      <div style="display: flex; align-items: center; justify-content: space-between;">
+        <h2 class="title is-size-4 mt-5">Assignments</h2>
+        <a class="icon-text is-size-6 has-text-grey" href="{{url_for ("instructor.add_assignment")}}" style="margin-right: 10px;">
+          <span class="icon">
+            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
+              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
+              <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
+            </svg>
+          </span>
+        </a>
+      </div>
+
+
+      <table class="table is-fullwidth" x-data="lang_config">
+        <tbody>
+          {% for assignment in assignments %}
+            <tr style="border-top: 1px solid #ccc;">
+              <td>
+                <a href="{{ url_for('instructor.view_assignment', assignment_id=assignment.id) }}" style="white-space: nowrap;" >{{ assignment.name }}</a>
+              </td>
+
+              <td class="has-text-centered">
+                <a href="{{ url_for('instructor.update_assignment', assignment_id=assignment.id) }}" class="button is-warning is-small" style="margin-left: 400px;">Update</a>
+              </td>
+
+              <td class="has-text-centered">
+                <form method="post" action="{{ url_for('instructor.delete_assignment')}}">
+                  <input type="hidden" name="assignment_id" value="{{ assignment.id }}">
+                  
+                  <div x-data="{ show_confirm: false }">
+                    <button class="button is-danger is-small ml-3" type="button" @click="show_confirm=true" x-bind:disabled="show_confirm">
+                      <span class="delete mr-2"></span> Delete
+                    </button>
+                
+                    <button class="button is-danger is-small" type="submit" name="delete_assignment" x-show="show_confirm">
+                      <b>Confirm</b>&nbsp;Delete Assignment
+                    </button>
+                  </div>
+                </form>
+
+              </td>
+
+            </tr>
+          {% endfor %}
+        </tbody>
+      </table>
diff --git a/src/codehelp/templates/help_form.html b/src/codehelp/templates/help_form.html
index 04de8dc..f144eb9 100644
--- a/src/codehelp/templates/help_form.html
+++ b/src/codehelp/templates/help_form.html
@@ -43,6 +43,30 @@ SPDX-License-Identifier: AGPL-3.0-only
       </div>
       {% endif %}
 
+      {% if assignments %}
+        <div class="field is-horizontal">
+          <div class="field-label is-normal">
+            <label class="label" for="assignment_name">Assignment:</label>
+          </div>
+          
+          <div class="field-body">
+              <div class="field">
+                <div class="control">
+                  <div class="select">
+                    <select name="assignment_id" required_id="assignment_id">
+                      <option value="">Select Assignment</option>
+                        {% for assignment in assignments %}
+                          <option value="{{assignment.id}}">{{assignment.name}}</option>
+                        {% endfor %}
+                      </option>
+                    </select>                 
+                  </div>
+                </div>
+              </div>
+          </div>
+        </div>
+      {% endif %}
+
       <div class="field is-horizontal">
         <div class="field-label is-normal">
           <label class="label" for="code">Code:</label>
diff --git a/src/codehelp/templates/help_view.html b/src/codehelp/templates/help_view.html
index 289f713..4bf4017 100644
--- a/src/codehelp/templates/help_view.html
+++ b/src/codehelp/templates/help_view.html
@@ -45,6 +45,38 @@ SPDX-License-Identifier: AGPL-3.0-only
       </div>
       {% endif %}
 
+      {% if assignment_name %}
+      <div class="field is-horizontal">
+        <div class="field-label">
+          <label class="label">Assignment:</label>
+        </div>
+        <div class="field-body">
+          <a onclick="document.querySelector('#assignment_dialog').showModal()">{{ assignment_name }}</a>
+        </div>
+      </div>
+
+      <dialog id="assignment_dialog" style="border: none; background: none; width: 75%; min-width: min(32em, 100vw);">
+        <div class="box">
+          <h3 class="subtitle is-4">{{ assignment_name }}</h3>
+          <p>{{ assignment_content }}</p>
+        </div>
+        <button class="modal-close is-large" aria-label="close" @click="closeModal"></button>
+      </dialog>
+      
+      <script type="text/JavaScript">
+        // close dialog on click outside
+        const dialog = document.querySelector("#assignment_dialog");
+        dialog.addEventListener('click', function (e) {
+            const rect = dialog.getBoundingClientRect();
+            const isInDialog=(rect.top <= e.clientY && e.clientY <= rect.top + rect.height
+              && rect.left <= e.clientX && e.clientX <= rect.left + rect.width);
+            if (!isInDialog) {
+                dialog.close();
+            }
+        });
+      </script>
+      {% endif %}
+
       <div class="field is-horizontal">
         <div class="field-label is-normal">
           <label class="label">Code:</label>
diff --git a/src/codehelp/templates/instructor.html b/src/codehelp/templates/instructor.html
index c259740..6710df9 100644
--- a/src/codehelp/templates/instructor.html
+++ b/src/codehelp/templates/instructor.html
@@ -13,6 +13,7 @@ datatable('queries', [
     ('user', 'display_name'),
     ('time', 'query_time'),
     ('lang', 'language'),
+    ('assignment', 'assignment_id'),
     ('code', 'code'),
     ('error', 'error'),
     ('issue', 'issue'),
diff --git a/src/gened/instructor.py b/src/gened/instructor.py
index 271718c..98a9faf 100644
--- a/src/gened/instructor.py
+++ b/src/gened/instructor.py
@@ -12,6 +12,7 @@ from flask import (
     redirect,
     render_template,
     request,
+    url_for,
 )
 from werkzeug.wrappers.response import Response
 
@@ -202,3 +203,65 @@ def set_role_instructor(role_id: int, bool_instructor: int) -> str:
     db.commit()
 
     return "okay"
+
+
+@bp.route("/config/add_assignment")
+@instructor_required
+def add_assignment():
+
+    return render_template('add_assignment.html')
+
+
+@bp.route("/upload_assignment", methods=["POST"])
+@instructor_required
+def upload_assignment():
+    db = get_db()
+    auth = get_auth()
+
+    db.execute("INSERT INTO assignments (name, class_id, creator_id, content) VALUES (?, ?, ?, ?)", 
+               [request.form['assignment_name'], auth['class_id'], auth['user_id'], request.form['assignment_content']])
+    db.commit()
+    flash("Assignment has been uploaded.")
+    return redirect(url_for("class_config.config_form"))
+
+
+@bp.route("/config/view_assignment")
+@instructor_required
+def view_assignment():
+    db = get_db()
+    assignment_id = request.args.get('assignment_id')
+    assignment = db.execute("SELECT * from assignments WHERE id=? ", [assignment_id]).fetchone()        
+    return render_template("view_assignment.html", assignment=assignment)
+
+
+@bp.route("/delete_assignment", methods=["POST"])
+@instructor_required
+def delete_assignment():
+    db = get_db()
+
+    db.execute("UPDATE assignments SET is_deleted = TRUE WHERE id = ?", [request.form['assignment_id']])
+    db.commit()
+    flash("Assignment has been deleted")
+    return redirect(url_for("class_config.config_form"))
+
+
+@bp.route("/config/update_assignment")
+@instructor_required
+def update_assignment():
+    db = get_db()
+    assignment_id = request.args.get('assignment_id')
+    assignment = db.execute("SELECT * from assignments WHERE id=? ", [assignment_id]).fetchone()
+    return render_template('update_assignment.html', assignment=assignment)
+
+
+@bp.route("/post_assignment_update", methods=["POST"])
+@instructor_required
+def post_assignment_update():
+    db = get_db()
+    auth = get_auth()
+
+    db.execute("UPDATE assignments SET name=?, content=? WHERE class_id=? AND id=?", 
+               [request.form['assignment_name'], request.form['assignment_content'], auth['class_id'], request.form['id']])
+    db.commit()
+    flash("Assignment has been updated.")
+    return redirect(url_for("class_config.config_form"))
diff --git a/src/gened/schema_common.sql b/src/gened/schema_common.sql
index 936ac68..0aa1449 100644
--- a/src/gened/schema_common.sql
+++ b/src/gened/schema_common.sql
@@ -18,6 +18,7 @@ DROP TABLE IF EXISTS classes_user;
 DROP TABLE IF EXISTS demo_links;
 DROP TABLE IF EXISTS migrations;
 DROP TABLE IF EXISTS models;
+DROP TABLE IF EXISTS assignments;
 
 PRAGMA foreign_keys = ON;  -- back on for good
 
@@ -164,3 +165,14 @@ INSERT INTO models(name, model) VALUES
     ('OpenAI GPT-4 Turbo', 'gpt-4-1106-preview')
 ;
 
+CREATE TABLE assignments (
+    id              INTEGER PRIMARY KEY AUTOINCREMENT,
+    name            TEXT NOT NULL UNIQUE,
+    class_id        INTEGER NOT NULL,
+    creator_id      INTEGER NOT NULL,
+    content         TEXT NOT NULL,
+    created_on     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
+    is_deleted      BOOLEAN DEFAULT FALSE,
+    FOREIGN KEY(creator_id) REFERENCES users(id),
+    FOREIGN KEY(class_id) REFERENCES classes(id)
+);
diff --git a/src/gened/templates/add_assignment.html b/src/gened/templates/add_assignment.html
new file mode 100644
index 0000000..d058c70
--- /dev/null
+++ b/src/gened/templates/add_assignment.html
@@ -0,0 +1,62 @@
+
+
+{% extends "base.html" %}
+{% block body %}
+<div class="columns is-desktop is-gapless">
+  <div class="column is-three-quarters-desktop">
+    <section class="section">
+
+    <div class="container">
+      <form action="{{url_for('instructor.upload_assignment')}}" method="post">
+
+        <div class="field is-horizontal">
+          <div class="field-label is-normal">
+            <label class="label" for="assignmen_name">Assignment Name:</label>
+          </div>
+          <div class="field-body">
+            <div class="field">
+              <div class="control">
+                <textarea class="textarea" name="assignment_name" id="assignment_name" rows=1 cols=20 required></textarea>
+              </div>
+            </div>
+          </div>
+        </div>
+
+        <div class="field is-horizontal">
+            <div class="field-label is-normal">
+              <label class="label" for="assignment_content">Assignment:</label>
+              <p class="has-text-grey">Please enter the assignment instructions here (text only).</p>
+            </div>
+            <div class="field-body">
+              <div class="field">
+                <div class="control">
+                  <textarea class="textarea" name="assignment_content" id="assignment_content" rows=20 cols= 112 required></textarea>
+                </div>
+              </div>
+            </div>
+          </div>
+
+
+          <div class="field is-horizontal">
+            <div class="field-label is-normal"><!-- spacing --></div>
+            <div class="field-body">
+              <div class="field">
+                <div class="control">
+                  <button
+                    class="button is-link"
+                    type="submit" >
+                  Upload Assignment
+                  </button>
+                </div>
+              </div>
+            </div>
+          </div>
+
+
+      </form>
+    </div>
+  </section>
+
+</div>
+</div>
+{% endblock %}
\ No newline at end of file
diff --git a/src/gened/templates/instructor_class_config.html b/src/gened/templates/instructor_class_config.html
index 4f0b453..da8b815 100644
--- a/src/gened/templates/instructor_class_config.html
+++ b/src/gened/templates/instructor_class_config.html
@@ -5,6 +5,7 @@ SPDX-License-Identifier: AGPL-3.0-only
 #}
 
 {% extends "base.html" %}
+{% from "tables.html" import datatable %}
 
 {% block body %}
 <style type="text/css">
diff --git a/src/gened/templates/update_assignment.html b/src/gened/templates/update_assignment.html
new file mode 100644
index 0000000..0001695
--- /dev/null
+++ b/src/gened/templates/update_assignment.html
@@ -0,0 +1,63 @@
+
+
+{% extends "base.html" %}
+{% block body %}
+<div class="columns is-desktop is-gapless">
+  <div class="column is-three-quarters-desktop">
+    <section class="section">
+
+    <div class="container">
+      <form action="{{url_for('instructor.post_assignment_update')}}" method="post">
+
+        <div class="field is-horizonta">
+          <div class="field-label is-normal">
+            <label class="label" for="assignmen_name">Assignment Name:</label>
+          </div>
+          <div class="field-body">
+            <div class="field">
+              <div class="control">
+                <textarea class="textarea" name="assignment_name" id="assignment_name" rows=1 cols=20 required>{{assignment.name | default('')}}</textarea>
+              </div>
+            </div>
+          </div>
+        </div>
+
+        <div class="field is-horizontal">
+            <div class="field-label is-normal">
+              <label class="label" for="assignment_content">Assignment:</label>
+              <p class="has-text-grey">Please enter the assignment instructions here (text only).</p>
+            </div>
+            <div class="field-body">
+              <div class="field">
+                <div class="control">
+                  <textarea class="textarea" name="assignment_content" id="assignment_content" rows=20 cols= 112 required>{{assignment.content | default('')}}</textarea>
+                </div>
+              </div>
+            </div>
+          </div>
+
+
+          <div class="field is-horizontal">
+            <div class="field-label is-normal"><!-- spacing --></div>
+            <div class="field-body">
+              <div class="field">
+                <div class="control">
+                  <button
+                    class="button is-link"
+                    type="submit" >
+                  Update Assignment
+                  </button>
+                  <input type="hidden" name="id" value={{ assignment.id }} >
+                </div>
+              </div>
+            </div>
+          </div>
+
+
+      </form>
+    </div>
+  </section>
+
+</div>
+</div>
+{% endblock %}
\ No newline at end of file
diff --git a/src/gened/templates/view_assignment.html b/src/gened/templates/view_assignment.html
new file mode 100644
index 0000000..bff789f
--- /dev/null
+++ b/src/gened/templates/view_assignment.html
@@ -0,0 +1,41 @@
+{% extends "base.html" %}
+{% block body %}
+
+
+<style>
+    .container {
+      display: flex;
+      flex-direction: column;
+      align-items: flex-start; /* Align content to the left */
+      justify-content: flex-start; /* Align content to the top */
+      height: 100vh; /* Ensure the container takes up the full height of the viewport */
+      padding: 20px; /* Optional: Add padding for better aesthetics */
+    }
+  
+    h1 {
+      text-align: left; /* Align text within h1 to the left */
+      font-size: 24px; /* Adjust the font size for the assignment name */
+      margin-bottom: 10px; /* Optional: Add margin to separate h1 and p */
+    }
+  
+    p {
+      text-align: left; /* Align text within p to the left */
+      font-size: 16px; /* Adjust the font size for the content */
+    }
+  </style>
+  
+  <div class="container">
+    <form action="{{ url_for('instructor.view_assignment') }}" id="view_assignment">
+      <h1>{{ assignment.name }}</h1>
+      <p>{{ assignment.content }}</p>
+    </form>
+  </div>
+  
+  
+  
+  
+  
+  
+
+
+{% endblock %}
\ No newline at end of file
